tls:
  certificates:
    - certFile: /certs/self.crt
      keyFile: /certs/self.key

http:
  routers:
    app-router:
      rule: "PathPrefix(`/`)"
      entryPoints: ["websecure"]
      service: app-service
      tls: {}
      middlewares:
        - app-allowlist
        - dry-agent-auth

    app-login:
      rule: "Path(`/login`) || Path(`/logout`)"
      entryPoints: ["websecure"]
      service: app-service
      tls: {}
      middlewares:
        - app-allowlist

    totp-router:
      rule: "PathPrefix(`/totp`)"
      entryPoints: ["websecure"]
      service: auth-service
      tls: {}
      middlewares:
        - app-allowlist
        - set-x-forwarded-proto

  services:
    app-service:
      loadBalancer:
        servers:
          - url: "http://127.0.0.1:${APP_LOCALHOST_PORT}"

    auth-service:
      loadBalancer:
        servers:
          - url: "http://127.0.0.1:${AUTH_LOCALHOST_PORT}"

  middlewares:
    app-allowlist:
      ipAllowList:
        sourceRange:
          - "${PUBLIC_SUBNET}"
    dry-agent-auth:
      forwardAuth:
        address: "http://127.0.0.1:${AUTH_LOCALHOST_PORT}/auth"
        trustForwardHeader: true
    set-x-forwarded-proto:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
tcp:
  routers:
    ssh-router:
      entryPoints:
        - ssh
      rule: "HostSNI(`*`)"
      service: ssh-service
      middlewares:
        - ssh-allowlist

  services:
    ssh-service:
      loadBalancer:
        servers:
          - address: "127.0.0.1:${SSH_LOCALHOST_PORT}"

  middlewares:
    ssh-allowlist:
      ipAllowList:
        sourceRange:
          - "${PUBLIC_SUBNET}"
